[tox]
envlist =
    py{38,39}-pytest{3,4,5,6}
    py{38,39,310,311,312,313}-pytest{7,8}
    project_tests
isolated_build = true

[gh-actions]
# See https://pypi.org/project/tox-gh-actions/
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313

[testenv]
deps =
    pytest3: pytest==3
    pytest3: setuptools<71
    pytest4: pytest==4
    pytest4: setuptools<71
    pytest5: pytest==5
    pytest6: pytest==6
    pytest7: pytest==7
    pytest8: pytest==8
    coverage
    pudb
passenv =
    HOME
    SSH_AUTH_SOCK
    USER
    PYTHONBREAKPOINT
setenv =
    py38: PRAGMA_VERSION = <python39
commands =
    # Run test in specific order: test_a warms the cache, test_b verifies the cache is busted
    coverage run -m pytest tests/main_test.py::test_a_run_first tests/main_test.py::test_b_run_second

    # Run same test. Cache busting is configured through pytest lru_cache_disabled setting
    coverage run --append -m pytest -c tests/pytest_lru_cache_allowlist.ini tests/main_test.py::test_a_run_first tests/main_test.py::test_b_run_second

    # Run test with cache busting disabled (lru cache behaviour enabled)
    coverage run --append -m pytest -c tests/pytest_lru_cache_allowlist_no_match.ini tests/allowlist_test.py::test_a_run_first tests/allowlist_test.py::test_b_run_second

    # Run all remaining tests
    coverage run --append -m pytest tests/ --ignore tests/allowlist_test.py

    coverage report --fail-under 100 --omit 'tests/*'
    coverage report --fail-under 100 --include 'tests/*'

    # Run in reverse order, just in case
    pytest tests/main_test.py::test_b_run_second tests/main_test.py::test_a_run_first

[testenv:project_tests]
# Only used to run project tests, no need to install package itself
allowlist_externals=pre-commit
commands =
    pre-commit install -f --install-hooks
    pre-commit run --all-files
